@page
@using System;
@using System.Diagnostics;
@using System.Data.SqlClient;
@using Models;
@{
    Layout = "_Layout";
    ViewData["Title"] = "Reports";

    if (Request.Cookies["permission"] != "1")
    {
        Response.Redirect("Index");
    }

    if (Request.Cookies["venueId"] == null)
    {
        //Redirect to index if we are logged in
        Response.Redirect("Login");
    }

    //Establishing connection to database
    String connectionString = "Server=tcp:amnotdaniel.duckdns.org,1433;Initial Catalog=projectstudio;Persist Security Info=False;User ID=sa;Password=ProjectStudio1;MultipleActiveResultSets=False;Encrypt=False;TrustServerCertificate=False;Connection Timeout=30;";
    SqlConnection db = new SqlConnection(connectionString);


    //Initialising dropdown lists
    List<CustomerDetail> dropdownListUsers = new List<CustomerDetail>();

    //Initialising results lists
    List<VenueDetail> venuesWithPerson = new List<VenueDetail>();
    List<VenueDetail> venues = new List<VenueDetail>();


    db.Open();

    //Filling the user dropdown list with users
    SqlCommand userDropdown = new SqlCommand("SELECT firstName, LastName, phoneNumber, uniqueId FROM Users", db);
    SqlDataReader readerUser = userDropdown.ExecuteReader();

    while (readerUser.Read())
    {
        string firstName = readerUser.GetString(0);
        string lastName = readerUser.GetString(1);
        string phoneNumber = readerUser.GetString(2);
        string uniqueId = readerUser.GetString(3);
        dropdownListUsers.Add(new CustomerDetail() { firstName = firstName, lastName = lastName, phoneNumber = phoneNumber, uniqueId = uniqueId });
    }

    readerUser.Close();


    //Establishing variables for form values
    var formUserValue = "";
    var searchType = "";
    var searchDateString = "";

    //Post method that runs necessary queries to grab report data
    if (Request.Method == "POST")
    {
        formUserValue = Request.Form["userValue"];
        searchType = Request.Form["queryType"];
        searchDateString = Request.Form["theDate"];


        //Runs SQL query that grabs venue and user data when the user button is clicked, it returns a list with affected users and what venue they were at
        if (searchType == "userSearch")
        {
            SqlCommand idSearch = new SqlCommand("SELECT ID FROM Users WHERE uniqueId = @0", db);

            idSearch.Parameters.AddWithValue("@0", formUserValue);

            var usersId = idSearch.ExecuteScalar();

            Debug.WriteLine("ID RETURNED " + usersId);

            SqlCommand dataSearch = new SqlCommand("SELECT v.venueName, v.venueAddress, v.venuePhone, v.venueOwner, cl.dateLog, u.firstName, u.lastName, u.phoneNumber FROM Venue as v JOIN CheckinLogs as cl on v.venueId = cl.venueId " +
                                                   "JOIN Users as u on cl.uniqueId = u.ID WHERE cl.venueId IN (SELECT venueId FROM CheckinLogs WHERE uniqueId = @0 " +
                                                   "AND dateLog >= CONVERT(datetime, '" + searchDateString + "')) AND cl.dateLog >= CONVERT(datetime, '" + searchDateString + "') AND NOT cl.uniqueId = @0", db);

            dataSearch.Parameters.AddWithValue("@0", usersId);

            SqlDataReader resultsReader = dataSearch.ExecuteReader();


            //while loop that goes through every row returned from the query and adds it to the list
            while (resultsReader.Read())
            {
                string venueName = resultsReader.GetString(0);
                string venueAddress = resultsReader.GetString(1);
                string venuePhone = resultsReader.GetString(2);
                string ownerName = resultsReader.GetString(3);
                DateTime logDate = resultsReader.GetDateTime(4);
                string firstName = resultsReader.GetString(5);
                string lastName = resultsReader.GetString(6);
                string phoneNumber = resultsReader.GetString(7);
                CustomerDetail affectedPerson = new CustomerDetail { firstName = firstName, lastName = lastName, phoneNumber = phoneNumber };
                venuesWithPerson.Add(new VenueDetail { venueName = venueName, venueAddress = venueAddress, venuePhone = venuePhone, ownerName = ownerName, logDate = logDate, personAffected = affectedPerson });

            }

            resultsReader.Close();
        }


        //Runs SQL query that grabs venue data when the venue button is clicked and returns venues that the person inputted has been to after the inputted date value
        if (searchType == "venueSearch")
        {
            SqlCommand dataSearch = new SqlCommand("SELECT v.venueName, v.venueAddress, v.venuePhone, v.venueOwner, cl.dateLog, v.ownerPhone FROM Venue as v JOIN CheckinLogs as cl on v.venueId = cl.venueId " +
                                                   "JOIN Users as u on cl.uniqueId = u.ID WHERE u.uniqueId LIKE @0 and cl.dateLog >= CONVERT(datetime, '" + searchDateString + "')", db);

            dataSearch.Parameters.AddWithValue("@0", formUserValue);

            SqlDataReader resultsReader = dataSearch.ExecuteReader();


            //While loop that goes through every row returned from the query and adds it to the list
            while (resultsReader.Read())
            {
                string venueName = resultsReader.GetString(0);
                string venueAddress = resultsReader.GetString(1);
                string venuePhone = resultsReader.GetString(2);
                string ownerName = resultsReader.GetString(3);
                DateTime logDate = resultsReader.GetDateTime(4);
                string ownerPhone = resultsReader.GetString(5);
                venues.Add(new VenueDetail { venueName = venueName, venueAddress = venueAddress, venuePhone = venuePhone, ownerName = ownerName, logDate = logDate, ownerPhone = ownerPhone });

            }

            resultsReader.Close();
        }

    }


    db.Close();

}

<div class="container">
    <main role="main" class="pb-3">
        <br /><br /><br />

        <div class="card">
            <div class="card-header">
                <form method="post" class="row">
                    <div class="col-4">
                        <input list="userSearch" name="userValue" class="form-control" placeholder="Enter name..." required />
                        <datalist id="userSearch">
                            @foreach (var user in dropdownListUsers)
                            {
                                <option value="@user.uniqueId">@user.firstName @user.lastName @user.phoneNumber</option>
                            }
                        </datalist>
                    </div>
                    <div class="col-4">
                        <input type="date" class="form-control" name="theDate" format="dd-mm-yyyy" required />
                    </div>
                    <div class="col-4">
                        <button type="submit" class="btn btn-outline-primary" onclick="clickButtonUser()">Affected Users</button>
                        <button type="submit" class="btn btn-outline-primary" onclick="clickButtonVenue()">Affected Venues</button>
                        <input type="text" id="queryType" name="queryType" hidden />
                    </div>
                </form>
            </div>
        </div>
    </main>
</div>

<div class="container">
    <div class="card">

        @if (venuesWithPerson.Count() > 0)
        {
            <div class="card-header">
                <i>Users affected by @formUserValue after: @searchDateString
            </div>
            <table class="table table-hover table-striped">
                <thead>
                    <tr>
                        <th scope="col">Affected Person</th>
                        <th scope="col">Affected Person Phone</th>
                        <th scope="col">Venue Name</th>
                        <th scope="col">Venue Address</th>
                        <th scope="col">Venue Phone Number</th>
                        <th scope="col">Log Date</th>

                    </tr>
                </thead>
                <tbody>
                    @foreach (var venue in venuesWithPerson)
                    {

                        <tr>
                            <td>
                                @venue.personAffected.firstName @venue.personAffected.lastName
                            </td>
                            <td>
                                @venue.personAffected.phoneNumber
                            </td>
                            <td>
                                @venue.venueName
                            </td>
                            <td>
                                @venue.venueAddress
                            </td>
                            <td>
                                @venue.venuePhone
                            </td>
                            <td>
                                @venue.logDate
                            </td>

                        </tr>

                    }
                </tbody>
            </table>
        }


        else if (venues.Count() > 0)
        {
            <div class="card-header">
                <i>Venues affected by @formUserValue after: @searchDateString
            </div>
            <table class="table table-hover table-striped">
                <thead>
                    <tr>
                        <th scope="col">Venue Name</th>
                        <th scope="col">Venue Address</th>
                        <th scope="col">Venue Phone Number</th>
                        <th scope="col">Venue Owner</th>
                        <th scope="col">Venue Owner Phone</th>
                        <th scope="col">Log Date</th>

                    </tr>
                </thead>
                <tbody>
                    @foreach (var venue in venues)
                    {

                        <tr>
                            <td>
                                @venue.venueName
                            </td>
                            <td>
                                @venue.venueAddress
                            </td>
                            <td>
                                @venue.venuePhone
                            </td>
                            <td>
                                @venue.ownerName
                            </td>
                            <td>
                                @venue.ownerPhone
                            </td>
                            <td>
                                @venue.logDate
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <div class="card-header">
            </div>
            <div class="card-body"><div class="text-center"><i>There are currently no results to display....</div> </div>
        }

    </div>
        </div>

<script>
    function clickButtonUser() {
        var input = document.getElementById('queryType');
        input.value = 'userSearch';
    }

    function clickButtonVenue() {
        var input = document.getElementById('queryType');
        input.value = 'venueSearch';
    }

</script>
