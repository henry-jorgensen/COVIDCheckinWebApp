@page
@using System;
@using System.Diagnostics;
@using System.Data.SqlClient;
@using Models;
@{
    Layout = "_Layout";
    ViewData["Title"] = "Reports";

    if (Request.Cookies["venueId"] == null)
    {
        //Redirect to index if we are logged in
        Response.Redirect("Register");
    }

    //Establishing connection to database
    String connectionString = "Server=tcp:amnotdaniel.duckdns.org,1433;Initial Catalog=projectstudio;Persist Security Info=False;User ID=sa;Password=ProjectStudio1;MultipleActiveResultSets=False;Encrypt=False;TrustServerCertificate=False;Connection Timeout=30;";
    SqlConnection db = new SqlConnection(connectionString);


    //Initialising dropdown lists
    List<VenueDetail> dropdownListVenues = new List<VenueDetail>();
    List<CustomerDetail> dropdownListUsers = new List<CustomerDetail>();

    //Initialising results lists
    List<CustomerDetail> customers = new List<CustomerDetail>();
    List<VenueDetail> venues = new List<VenueDetail>();
    
    db.Open();

    //Filling the venue dropdown list with the venues
    SqlCommand venueDropdown = new SqlCommand("SELECT venueName, venueId FROM Venue", db);
    SqlDataReader readerVenue = venueDropdown.ExecuteReader();

    while (readerVenue.Read())
    {
        string venuename = readerVenue.GetString(0);
        int venueId = readerVenue.GetInt32(1);
        dropdownListVenues.Add(new VenueDetail() { venueName = venuename, venueId = venueId });
    }

    readerVenue.Close();


    //Filling the user dropdown list with users 
    SqlCommand userDropdown = new SqlCommand("SELECT firstName, LastName, uniqueId FROM Users", db);
    SqlDataReader readerUser = userDropdown.ExecuteReader();

    while (readerUser.Read())
    {
        string firstName = readerUser.GetString(0);
        string lastName = readerUser.GetString(1);
        string uniqueId = readerUser.GetString(2);
        dropdownListUsers.Add(new CustomerDetail() { firstName = firstName, lastName = lastName, uniqueId = uniqueId });
    }

    readerUser.Close();


    //Establishing variables for form values
    var formVenueValue = "";
    var formUserValue = "";
    var userSearchName = "";


    //Post method that runs necessary queries to grab report data
    if (Request.Method == "POST")
    {
        formVenueValue = Request.Form["venueValue"];
        formUserValue = Request.Form["userValue"];

        //Runs SQL query that grabs venue data when a user is inputted into the report search, which returns the list of venues the user has checked into
        if (formVenueValue == "")
        {
            SqlCommand dataSearch = new SqlCommand("SELECT v.venueName, v.venueAddress, v.venuePhone, v.ownerPhone, cl.dateLog, u.firstName, u.lastName " +
                                                   "FROM Users AS u JOIN CheckinLogs AS cl ON u.ID = cl.uniqueId JOIN Venue AS v ON v.venueId = cl.venueId " +
                                                   "WHERE u.uniqueId = @0 ORDER BY dateLog DESC", db);

            dataSearch.Parameters.AddWithValue("@0", formUserValue);

            SqlDataReader resultsReader = dataSearch.ExecuteReader();


            //while loop that goes through every row returned from the query and adds it to the list
            while (resultsReader.Read())
            {
                string venueName = resultsReader.GetString(0);
                string venueAddress = resultsReader.GetString(1);
                string venuePhone = resultsReader.GetString(2);
                string ownerName = resultsReader.GetString(3);
                DateTime logDate = resultsReader.GetDateTime(4);
                userSearchName = resultsReader.GetString(5) + " " + resultsReader.GetString(6);
                venues.Add(new VenueDetail { venueName = venueName, venueAddress = venueAddress, venuePhone = venuePhone, ownerName = ownerName, logDate = logDate });

            }

            resultsReader.Close();
        }


        //Runs SQL query that grabs venue data when a venue is inputted into the report search, which returns the list of users that have checked into that venue
        if (formUserValue == "")
        {
            SqlCommand dataSearch = new SqlCommand("SELECT u.firstName, u.lastName, u.phoneNumber, cl.dateLog " +
                                                   "FROM Users AS u JOIN CheckinLogs AS cl ON u.ID = cl.uniqueId JOIN Venue AS v ON v.venueId = cl.venueId " +
                                                   "WHERE v.venueName LIKE @0 ORDER BY dateLog DESC", db);

            dataSearch.Parameters.AddWithValue("@0", formVenueValue);

            SqlDataReader resultsReader = dataSearch.ExecuteReader();


            //While loop that goes through every row returned from the query and adds it to the list
            while (resultsReader.Read())
            {
                string firstName = resultsReader.GetString(0);
                string lastName = resultsReader.GetString(1);
                string phoneNumber = resultsReader.GetString(2);
                DateTime logDate = resultsReader.GetDateTime(3);
                customers.Add(new CustomerDetail { firstName = firstName, lastName = lastName, phoneNumber = phoneNumber, logDate = logDate });

            }

            resultsReader.Close();
        }

    }


    db.Close();

}


<form method="post" class="row">
    <div class="col-4">
        <input list="venueSearch" name="venueValue" class="form-control" placeholder="Enter venue name..." />
        <datalist id="venueSearch">
            @foreach (var venue in dropdownListVenues)
            {
                <option value="@venue.venueName">@venue.venueId</option>
            }
        </datalist>
    </div>
    <div class="col-4">
        <input list="userSearch" name="userValue" class="form-control" placeholder="Enter name..." />
        <datalist id="userSearch">
            @foreach (var user in dropdownListUsers)
            {
                <option value="@user.uniqueId">@user.firstName @user.lastName</option>
            }
        </datalist>
    </div>
    <div class="col-4">
        <button type="submit" class="btn btn-outline-primary">Search</button>
    </div>
</form>

@if (venues.Count() > 0)
{
    <h1>@userSearchName</h1>
    <table class="table table-hover table-striped">
        <thead>
            <tr>
                <th scope="col">Venue Name</th>
                <th scope="col">Venue Address</th>
                <th scope="col">Venue Phone Number</th>
                <th scope="col">Owner Name</th>
                <th scope="col">Log Date</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var venue in venues)
            {
                <tr>
                    <td>
                        @venue.venueName
                    </td>
                    <td>
                        @venue.venueAddress
                    </td>
                    <td>
                        @venue.venuePhone
                    </td>
                    <td>
                        @venue.ownerName
                    </td>
                    <td>
                        @venue.logDate
                    </td>
                </tr>
            }
        </tbody>
    </table>
}


@if (customers.Count() > 0)
{

    <h1>@formVenueValue</h1>
    <table class="table table-hover table-striped">
        <thead>
            <tr>
                <th scope="col">First Name</th>
                <th scope="col">Last Name</th>
                <th scope="col">Phone Number</th>
                <th scope="col">Log Date</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var customer in customers)
            {

                <tr>
                    <td>
                        @customer.firstName
                    </td>
                    <td>
                        @customer.lastName
                    </td>
                    <td>
                        @customer.phoneNumber
                    </td>
                    <td>
                        @customer.logDate
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

