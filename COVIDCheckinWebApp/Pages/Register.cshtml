@page
@using System.Web;
@using System.Linq;
@using System.Data.SqlClient;
@using System.Configuration;

@{
    ViewData["Title"] = "Registration";

    String connectionString = "Server=tcp:amnotdaniel.duckdns.org,1433;Initial Catalog=projectstudio;Persist Security Info=False;User ID=sa;Password=ProjectStudio1;MultipleActiveResultSets=False;Encrypt=False;TrustServerCertificate=False;Connection Timeout=30;";
    SqlConnection db = new SqlConnection(connectionString);


    var email = "";
    var phone = "";
    var password = "";
    var businessName = "";
    var businessOwner = "";
    var businessAddress = "";
    var businessNumber = "";
    var venueIdString = "";

    if (Request.Cookies["email"]!=null && Request.Cookies["email"] != null)
    {
        Response.Redirect("Index");
    }

    if (Request.Method == "POST")
    {
        email = Request.Form["email"];
        phone = Request.Form["phone"];
        password = Request.Form["password"];
        businessName = Request.Form["businessname"];
        businessOwner = Request.Form["businessowner"];
        businessAddress = Request.Form["businessaddress"];
        businessNumber = Request.Form["businessnumber"];

        email = email.ToUpper();
        businessName = businessName.ToUpper();
        businessOwner = businessOwner.ToUpper();
        businessAddress = businessAddress.ToUpper();




        SqlCommand checkExisting = new SqlCommand("SELECT venueId FROM Venue WHERE venueName = @0 AND venueAddress = @1", db);
        checkExisting.Parameters.AddWithValue("@0", businessName);
        checkExisting.Parameters.AddWithValue("@1", businessAddress);

        db.Open();
        var checkExistingId = checkExisting.ExecuteScalar();

        if (checkExistingId != null)
        {
            venueIdString = checkExistingId.ToString();
        }
        else
        {
            SqlCommand insert = new SqlCommand("INSERT [Venue] ([ownerEmail], [ownerPhone], [ownerPassword], [venueName], [venueOwner], [venueAddress], [venuePhone])" +
            "VALUES(@0, @1, @2, @3, @4, @5, @6)", db);
            insert.Parameters.AddWithValue("@0", email);
            insert.Parameters.AddWithValue("@1", phone);
            insert.Parameters.AddWithValue("@2", password);
            insert.Parameters.AddWithValue("@3", businessName);
            insert.Parameters.AddWithValue("@4", businessOwner);
            insert.Parameters.AddWithValue("@5", businessAddress);
            insert.Parameters.AddWithValue("@6", businessNumber);

            insert.ExecuteNonQuery();

            SqlCommand getLastId = new SqlCommand("SELECT TOP 1 venueId FROM Venue ORDER BY venueId DESC", db);

            var venueId = getLastId.ExecuteScalar();
            Console.WriteLine("Venue ID: " + venueId);
            venueIdString = venueId.ToString();
        }

        Response.Cookies.Append("venueId", venueIdString);
    }
}


<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCJG02FQOVVRvnAMzRdFvNo9QLLcBsNLIY&libraries=places&callback=initialize"></script>

<header>
    <nav class="navbar navbar-dark bg-primary navbar-expand-lg">
        <a class="navbar-brand" href="#">
            <img src="https://getbootstrap.com/docs/4.1/assets/brand/bootstrap-solid.svg" width="30" height="30" class="d-inline-block align-top" alt="">
            Venue Management
        </a>

        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav">
                <li class="nav-item">
                    <a class="nav-link" href="index">Home <span class="sr-only">(current)</span></a>
                </li>

                <li class="nav-item disabled">
                    <a class="nav-link" href="login">Login <span class="sr-only">(current)</span></a>
                </li>

                <li class="nav-item active">
                    <a class="nav-link" href="register">Register <span class="sr-only">(current)</span></a>
                </li>

                <li class="nav-item">
                    <a class="nav-link" href="checkin">Checkin <span class="sr-only">(current)</span></a>
                </li>

                <li class="nav-item disabled">
                    <a class="nav-link" href="reports">Reports <span class="sr-only">(current)</span></a>
                </li>
            </ul>
        </div>
    </nav>
</header>

<div class="container">
    <main role="main" class="pb-3">
        <br /><br /><br />

        <div class="card">
            <div class="card-body">
                <form method="post" action="">
                    <div class="row d-flex justify-content-center">


                        <div class="col-sm-6">
                            <h5 class="card-title">Your details</h5>
                            <div class="form-group">
                                <input type="email" class="form-control" name="email" placeholder="Email..." required>
                            </div>

                            <div class="form-group">
                                <input type="tel" class="form-control" name="phone" placeholder="Contact number..." pattern="^\d{10}$" oninvalid="this.setCustomValidity('Enter a valid phone number.')" oninput="this.setCustomValidity('')" required autocomplete="tel">
                            </div>

                            <div class="form-group">
                                <input type="password" class="form-control" name="password" placeholder="Password..." id="password" required>
                            </div>

                            <div class="form-group">
                                <input type="password" class="form-control" name="password2" placeholder="Confirm password..." id="password2" oninput="matchPassword(this)" required>
                            </div>

                            <div class="form-group">
                                <button type="submit" class="btn btn-primary">Register</button>
                            </div>
                        </div>

                        <div class="col-sm-6">
                            <h5 class="card-title">Store details</h5>
                            <div class="form-group">
                                <input type="text" class="form-control" name="businessname" placeholder="Business name..." required>
                            </div>

                            <div class="form-group">
                                <input type="text" class="form-control" name="businessowner" placeholder="Business owner..." required>
                            </div>

                            <div class="form-group">
                                <input type="text" class="form-control" name="businessaddress" id="businessaddress" placeholder="Business address..." required>
                            </div>

                            <div class="form-group">
                                <input type="tel" class="form-control" name="businessnumber" placeholder="Business phone number..." pattern="^\d{10}$" oninvalid="this.setCustomValidity('Enter a valid phone number.')" oninput="this.setCustomValidity('')" required autocomplete="tel">
                            </div>
                        </div>
                    </div>

                    @{
                        if (Request.Method == "POST")
                        {
                            Response.Cookies.Append("email", Request.Form["email"]);
                            Response.Cookies.Append("phone", Request.Form["phone"]);
                            Response.Cookies.Append("password", Request.Form["password"]);
                            Response.Cookies.Append("password2", Request.Form["password2"]);
                            Response.Cookies.Append("bname", Request.Form["businessname"]);
                            Response.Cookies.Append("bowner", Request.Form["businessowner"]);
                            Response.Cookies.Append("baddress", Request.Form["businessaddress"]);
                            Response.Cookies.Append("bnumber", Request.Form["businessnumber"]);

                            Response.Redirect("Index");
                        }
                    }
                </form>
            </div>
        </div>
    </main>
</div>

<script language='javascript' type='text/javascript'>
    function matchPassword(password) {
        if (password.value != document.getElementById('password').value) {
            password.setCustomValidity('Passwords must match.');
        } else {
            password.setCustomValidity('');
        }
    }
    function initialize() {
        var input = document.getElementById('businessaddress');
        new google.maps.places.Autocomplete(input);
    }

    google.maps.event.addDomListener(window, 'load', initialize);


</script>